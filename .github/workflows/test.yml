name:                      test

on:
  repository_dispatch:
    types:
      - test-command

jobs:
  # update status check.
  start:
    name:                  Start
    runs-on:               ubuntu-latest

    steps:
      - name:              Start
        uses:              Sibz/github-status-action@v1
        with:
          authToken:       ${{ secrets.GITHUB_TOKEN }}
          context:         'Tests'
          description:     'Starting tests.'
          state:           'pending'
          sha:             ${{ github.event.client_payload.pull_request.head.sha }}

  # perform tests.
  test:
    name:                  Test
    needs:                 Start
    runs-on:               macos-latest

    strategy:
      fail-fast:           false
      matrix:
        destination:
          - platform=macOS
          - platform=iOS Simulator,OS=12.4,name=iPhone Xs
          - platform=iOS Simulator,OS=13.5,name=iPhone 11
          - platform=iOS Simulator,OS=14.4,name=iPhone 12
          - platform=tvOS Simulator,OS=12.4,name=Apple TV 4K
          - platform=tvOS Simulator,OS=13.0,name=Apple TV 4K
          - platform=tvOS Simulator,OS=14.4,name=Apple TV 4K
          - platform=watchOS Simulator,OS=5.3,name=Apple Watch Series 4 - 44mm
          - platform=watchOS Simulator,OS=6.1,name=Apple Watch Series 5 - 44mm
          - platform=watchOS Simulator,OS=7.2,name=Apple Watch Series 6 - 44mm
        swift:
          - '5.2.0'
          - '5'

    steps:
      # checkout the current PR of `ComposableRequest`.
      - name:              Checkout
        uses:              actions/checkout@v3
        with:
            token:         ${{ secrets.GITHUB_TOKEN }}
            repository:    ${{ github.event.client_payload.pull_request.head.repo.full_name }}
            ref:           ${{ github.event.client_payload.pull_request.head.sha }}
      # update swift version.
      - name:              Swift (${{ matrix.swift }})
        uses:              fwal/setup-swift@v1
        with:
          swift-version:   ${{ matrix.swift }}
      # run test/build.
      - name:              Build (${{ matrix.destination }})
        run:               xcodebuild build-for-testing -derivedDataPath .build/ -scheme ComposableRequest-Package -destination '${{ matrix.destination }}' | xcpretty
      - name:              Test (${{ matrix.destination }})
        if:                ${{ !contains(matrix.destination, 'watchOS') }}
        run:               xcodebuild test-without-building -derivedDataPath .build/ -scheme ComposableRequestTests -enableCodeCoverage YES -destination '${{ matrix.destination }}' | xcpretty
      # upload coverage.
      - name:              Coverage (Upload)
        if:                ${{ !contains(matrix.destination, 'watchOS') }}
        uses:              codecov/codecov-action@v2
        with:
          directory:       '.build/Logs/Test'
        timeout-minutes:   1
        continue-on-error: true

  # notify success.
  success:
    name:                  Success
    needs:                 test
    runs-on:               ubuntu-latest

    steps:
      - name:              Success
        uses:              Sibz/github-status-action@v1
        with:
          authToken:       ${{secrets.GITHUB_TOKEN}}
          context:         'Tests'
          description:     'All tests passed.'
          state:           'success'
          sha:             ${{ github.event.client_payload.pull_request.head.sha }}

  # notify failure.
  failure:
    name:                  Failure
    needs:                 test
    if:                    failure()
    runs-on:               ubuntu-latest

    steps:
      - name:              Failure
        uses:              Sibz/github-status-action@v1
        with:
          authToken:       ${{secrets.GITHUB_TOKEN}}
          context:         'Tests'
          description:     'Some tests failed.'
          state:           'failure'
          sha:             ${{ github.event.client_payload.pull_request.head.sha }}
